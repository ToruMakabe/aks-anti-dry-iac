name: "CI for PR (Terraform/Shared)"
on:
  pull_request:
    branches:
      - main
    paths:
      - 'terraform/shared/**'
  workflow_dispatch:
defaults:
  run:
    shell: bash

jobs:
  ci:
    name: "CI"
    runs-on: ubuntu-latest
    env:
      ARM_SUBSCRIPTION_ID: ${{  secrets.ARM_SUBSCRIPTION_ID }}
      ARM_CLIENT_ID: ${{  secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{  secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{  secrets.ARM_TENANT_ID }}

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.9

      - name: "Terraform Format"
        id: fmt
        working-directory: ./terraform/shared
        run: terraform fmt -check

      - name: "Terraform Init"
        id: init
        working-directory: ./test/fixtures/shared
        run: terraform init -backend=false

      - name: "Setup TFLint"
        uses: terraform-linters/setup-tflint@v1
        with:
          tflint_version: v0.32.1

      - name: "Init TFLint"
        working-directory: "./test/fixtures/shared"
        run: tflint --init

      - name: "Run TFLint"
        id: tflint
        working-directory: "./test/fixtures/shared"
        run: tflint -f compact --module --var-file=ci.tfvars
        # Exit this job if tflint fails

      - name: "Terraform Validate"
        id: validate
        working-directory: ./test/fixtures/shared
        run: terraform validate -no-color

      - name: "Terraform Plan"
        id: plan
        working-directory: ./test/fixtures/shared
        run: terraform plan -var-file=ci.tfvars -no-color
        continue-on-error: true

      - name: "Create comment for PR (Terraform fmt/validate/plan)"
        uses: actions/github-script@v4
        env:
          PLAN: "${{ steps.plan.outputs.stdout }}\n${{ steps.plan.outputs.stderr }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Check Terraform files (Shared)
            #### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            </details>

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
